#include <Wire.h> // Include the Arduino I2C library
const byte s7sAddress = 0x71;

unsigned int counter = 9900;  // This will count up to 65k
char tempString[10];  // Will be used with sprintf to create strings

void setup()
{
 Wire.begin(); //initialize hardware I2C pins

clearDisplayI2C();  // Clears display, resets cursor to left-most digit, and then turn on all segments and decimals

      // Custom function to send four bytes via I2C
     // The Wire.write  function only allows sending of a single byte at a time
  setDecimalsI2C(0b111111);  // Turn on all decimals, colon, apos

  // Flash brightness values at the beginning
  setBrightnessI2C(0);  // Lowest brightness
  delay(1500);
  setBrightnessI2C(255);  // High brightness
  delay(1500);

  // Clear the display before jumping into loop
  clearDisplayI2C();  
}

void loop()
{
  // Magical sprintf creates a string for us to send to the s7s
  // The %4d option creates a 4-digit integer
  sprintf(tempString, "%4d", counter);

  // This will output the tempString to the S7S
  s7sSendStringI2C(tempString);

  // Print the decimal at the proper spot
  if (counter < 10000)        //10^-4 sec
    setDecimalsI2C(0b00000100);   //set digit 3 decimal on
  else
    setDecimalsI2C(0b00001000);

  counter++;  // Increment the counter
  delay(100);  // This will make the display update at 10Hz
}

// This custom function works somewhat like a serial.print.
// You can send it an array of chars (string) and it'll print the first 4 characters in the array
void s7sSendStringI2C(String toSend)
{
  Wire.beginTransmission (s7sAddress);
  for (int i=0; i<4; i++)
  {
    Wire.write (toSend[i]);
  }
   Wire.endTransmission ();
}

// This will clear the display and reset the cursor to left-most digit
void clearDisplayI2C()
{
  Wire.beginTransmission(s7sAddress);
 Wire.write (0x76);  // Clear display command
  Wire.endTransmission();
}

// Set the displays brightness. Should receive byte with the value to set the brightness to
//  dimmest------------->brightest
//     0--------127--------255
void setBrightnessI2C(byte value)
{
  Wire.beginTransmission(s7sAddress);
 Wire.write(0x7A);  // Set brightness command byte
 Wire.write(value);  // brightness data byte
  Wire.endTransmission();
}

// Turn on any, none, or all of the decimals
void setDecimalsI2C(byte decimals)
{
 Wire.beginTransmission(s7sAddress);
 Wire.write(0x77);
 Wire.write(decimals);
 Wire.endTransmission();
}

